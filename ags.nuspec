<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <id>ags</id>
    <version>3.5.1.15</version>
    <packageSourceUrl>https://github.com/ericoporto/ags-choco-pkg</packageSourceUrl>
    <owners>ericoporto</owners>
    <title>Adventure Game Studio</title>
    <authors>Chris Jones et al</authors>
    <projectUrl>https://www.adventuregamestudio.co.uk</projectUrl>
    <projectSourceUrl>https://github.com/adventuregamestudio/ags</projectSourceUrl>
    <iconUrl>https://cdn.jsdelivr.net/gh/ericoporto/ags-choco-pkg@ca1d144d719687803a0facd86599788b7dfcd71f/docs/icon.png</iconUrl>
    <copyright>2022 Chris Jones et al</copyright>
    <licenseUrl>https://raw.githubusercontent.com/adventuregamestudio/ags/master/License.txt</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <docsUrl>https://adventuregamestudio.github.io/ags-manual/</docsUrl>
    <mailingListUrl>https://www.adventuregamestudio.co.uk/forums/index.php</mailingListUrl>
    <bugTrackerUrl>https://github.com/adventuregamestudio/ags/issues</bugTrackerUrl>
    <tags>ags AdventureGameStudio</tags>
    <summary>Adventure Game Studio is a Game Developing IDE.</summary>
    <description>
      Adventure Game Studio is Free and Open Source. 
      AGS provides everything you need from within one easy-to-use application. 
      Create, test and debug your game, all in one place.
    </description>
    <releaseNotes>
Released: 4th February 2022

This release is brought to you by:

- Alan v. Drake
- Crimson Wizard
- eri0o
- fernewelten (fixes)
- James Duong (implemented "--console-attach" option for Windows)
- Morgan Willcock
- Nick Sonneveld
- rofl0r
- Thierry Crozat (bug fixing)
- vga256 (bug fixing)

Summary

3.5.1 is a minor update after 3.5.0, which contains mostly utility additions, fixes and perfomance improvements.

For the reference, we currently have another major version in works, which is already usable although may be not as stable, and introduces a SDL2-based engine, planned to be released as 3.6.0. If you're interested you may find it here: https://www.adventuregamestudio.co.uk/forums/index.php?topic=58976.0


Changes in the Patch 8:

Engine:
- Clearer error messages for Get/SetProperty functions.
- Fixed PlayFlic() command fails to start the video (regression in 3.5.1).
- Fixed DrawingSurface.DrawSurface() not applying transparency parameter correctly if the drawn surface has alpha channel.
- Fixed OVERHOTSPOT is not updated immediately when character's name changes while cursor is above that character.

Templates:
- In BASS template fixed right click not dropping currently selected item if cursor was hovering over another item.



Changes in the Patch 7:

Editor:
 - Added "Layout -> Reset to Defaults" menu command.
 - Editor will now reset panel layout to default state if loading layout fail for any reason.
 - Default config is now saved also when the game is run in debug mode (F5). This ensures that the test run is using the latest Default Setup, if the user's config has not been created yet.
 - Editor will now display an error if user tried to reserve too many channels for audio types.
 - Fixed Editor failing to start if user preferences file is corrupted.
 - Fixed "Use old-style custom dialog options API" was not set when importing pre-3.4.0 projects.
 - Fixed comboboxes' drop-down arrows were not painted with the right color from a color theme.

Engine:
 - Fixed program crash occuring if the game reserved too many channels for audio types.
 - Fixed potential crash occuring when player loads a save made in a multi-frame room, but the room was since edited and no longer has as many frames.
 - Fixed character may have incorrect Frame (property) values while turning.


Changes in the Patch 6:

Editor:
 - Added line numbers in the dialog script editor.
 - Fixed Dialog script loosing changes if the pane is closed or redocked.
 - Fixed controls arrangement on the Dialog pane getting broken when it's redocked.

Engine:
 - Fixed filepaths in scripts that have backslashes ('\') fail on non-Windows systems.
   All the (script) File functions will now convert backslashes in filepaths into forward slashes for compatibility.
 - Fixed engine was still creating standard directories for game saves and data, even if user provided the custom paths for these.
 - Fixed TextBox control crashing the game if it's empty and player presses Backspace.
 - Fixed controls on a fully transparent GUI were not interactive (this is an original AGS behavior, which was unintentionally changed in 3.5.0 by mistake).

Compatibility:
 - When running 3.5.0 games, treat fully transparent GUI as non-interactable.
   In AGS transparent GUIs may be still interacted with, but 3.5.0 introduced an unintentional (and undocumented) change to this, which was reverted in 3.5.1.

Android:
 - Support global engine's config file when the game is run from the Launcher: it's located in the AGS games' parent directory, same place where android.cfg is.

WinSetup:
 - Added "Custom game shared data path" to complement "Custom save path" option.


Changes in the Patch 5:

Contained no changes and was a formal re-release with only fixed program build instructions for Linux.


Changes in the Patch 4:

Editor:
 - Fixed swapping of inventory item's numeric ID could lead to errors.
 - Fixed crash when importing pre-3.* games with multiple script modules.
 - Renamed "Enforce object-based scripting" setting to "Enforce post-2.62 scripting". This is for clarity.

Compiler:
 - Fixed potential memory corruption when user script reaches max nested if/else blocks.

Engine:
 - Also tell module name and approximate source line when reporting script import errors for the variables and local functions.


Changes in the Patch 3:

Editor:
 - Fixed sprite file over 2 GB could not be loaded (regression since the last patch).

Engine:
 - Further improvement to GUI perfomance: don't redraw GUI when the mouse cursor is hovering over or interacting with controls not leading to an actual visual change.
 - Fixed ListBox items could become unaccessible if its font or height is changed leading to a disabled scrollbar.


Changes in the Patch 2:

Engine:
 - Fixed speech lipsync getting disabled after loading another game with RunAGSGame().
 - Fixed MOD/XM clips fail to play (regression).
 - Fixed certain OGV videos fail to play (regression).
 - Fixed software renderer was not updating game screen correctly when running a game with legacy "letterboxed" feature (regression).


Changes in the Patch 1:

Editor:
 - Fixed script compiler sometimes was not specifying actual Dialog number when reporting errors in the dialog scripts.

Engine:
 - Fixed Game.TranslationFilename always returning empty string (regression).
 - Fixed GUI controls which were toggled from disabled to enabled state not responding to the mouse clicks until the mouse is moved (regression).
 - Fixed OpenGL did not apply a Linear filter when "Render sprites in screen resolution" option is off.


What is new in 3.5.1

Editor:
 - Added "Attach game data to exe" option to General Settings. This lets you to package game data separately from the game.exe (only important on Windows at the moment).
 - Deprecated "Limit display mode to 16-bit" property in Runtime Setup as it's no longer used by the engine.
 - Display aspect ratio in game resolution dialog.
 - Implemented classic Color Picker dialog for the Color type values in the property grid, instead of the default one which does not allow user-defined colors.
 - Improved tab switching performance for script windows.
 - Editor will now enforce full game rebuild after upgrading an older project, this ensures that all scripts are recompiled with the new version rules.
 - Fixed room lists in property editor were not updated after room number is changed.
 - Fixed importing pre-3.* projects broken by incorrect assignment of "Game file name" property.
 - Fixed importing Characters and GUI without sprites still created empty sprite folders.
 - Fixed crash when exporting/importing Characters with no Normal View.
 - Fixed translation compiler did not correctly save some of the escaped sequences, such as "\n".

Scripting:
 - Implemented correct parsing of a "const string" function return type.
 - Fixed implementing imported functions was forbidden in the room scripts.

Script API:
 - Added GUI.Shown readonly property that tells whether GUI is active on screen. This is primarily for GUIs with "Popup At Y" style, because they hide themselves regardless of Visible property. Note that since 3.5.0 GUI.Visible only tells a script-set value.
 - File.Open() now supports CONFIGFILE tag which will try to open user config file for reading or writing regardless of where config is located on disk.
 - Added System.SaveConfigToFile() which writes current engine settings to the user config file. Only the options that can be changed at runtime are written back at the moment.
 - GetTranslation() now returns "const string" (was "string"). This is to prevent modifying returned string using old-style string functions, such as StrCat(), as this string may be allocated in the internal engine memory for its own use.

Engine:
 - Support loading audio and video from data packages larger than 2 GB.
 - Improved game data loading times by introducing buffered file stream. Initial tests showed 3-4 times faster file reading.
 - Improved game perfomance by not reupdating all of the GUIs each time anything changes, instead only affected GUI will be updated each time.
 - Some improvement to general script perfomance.
 - Some improvement to script Dictionary and Set types perfomance.
 - Room Object's Graphic property now can be assigned a sprite with index over 32767 and up to 65535. This restriction is due to internal data format, which cannot be fully fixed without breaking compatibility with plugin API. This may still be worked around by assigning a View, as View's frames may contain sprites of any index available.
 - Similarily, Object's View, Loop and Frame can now be assigned a value over 32767 and up to 65535; not that this was ever an issue...
 - Removed arbitrary limit of 1000000 dynamic array elements (now supports over 2 billion).
 - Dialogs with no enabled options left will be now stopped, instead of raising script error.
 - Engine will not longer quit the game when failing to write a save, but simply display an error on screen (...why this was a thing in the first place?!).
 - When restoring a save engine will now try to match game pack by GUID rather than using exe/pack name. This resolves potential problems when game package may have different name in distribution to another system. Also makes saves in multi-game collections more reliable.
 - In Debug game mode allow to toggle infinite FPS mode (prior it could not be turned off).
 - Expanded text parser error messages for easier debugging.
 - Adjusted all the command-line options to have consistent prefix convention, where all full-name options must be preceded by double-dash, and one-letter options by single dash.
 - Added "--localuserconf" command and similar global config option which tells engine to read and write user config in the game's directory rather than using standard platform path. Game dir must be writeable for this to work.
 - Added "--conf" command which forces engine to read only explicit config file on startup.
 - Added "--user-data-dir" and "--shared-data-dir" commands for setting save game directory and shared app data directory from command line (this corresponds to existing options in config).
 - Fully configurable log output (in both game config and command line) allows to set up which message types and groups are printed by which output methods (sinks), including: file, system console, in-game console. "warnings.log" is now created only if file log was not requested by user.
 - Added "--log-" set of command line options for setting up log output.
 - Added "--tell-filepath" option for printing known engine's and game's file locations.
 - Added "--tell-gameproperties" option for printing some of the game's general settings.
More information on log config and --tell commands currently may be found in following text file: OPTIONS.md
This has to be added to the manual eventually.
 - Support proper lookup for Allegro 4 library resources (such as its own config and digital MIDI patches) in the game directory.
 - Engine will no longer precreate directories for common files: saves, user config, shared files and so forth, - before actually having to write these. This ensures that no new directories are created on your disk without actual need. Also this fixed a problem that could happen if someone deleted e.g. a game's save directory while game was running.
 - Fixed running game from another directory by passing its relative filename as command-line argument: in this case engine was incorrectly using its own directory to search for external game data, opening files for reading by script command, and so on.
 - Fixed some of the engine's own hotkeys (such windowed/fullscreen mode toggle) not working during certain skippable game states.
 - Fixed overlay was set to wrong position if it were using TextWindow gui and either its text or X, Y properties got changed.
 - Fixed crash occuring when the speech is using text window gui with zero Padding and the speech text is an empty line.
 - Fixed characters and room objects were not updating their looks if their current graphic was a Dynamic Sprite, and that sprite was modified with ChangeCanvasSize, CopyTransparencyMask, Crop, Flip, Resize, Rotate or Tint function.
 - Fixed Views' frames keeping reference to deleted Dynamic Sprites causing crashes. Now they will be reset to dummy sprite 0 for safety.
 - Fixed engine crash when button's graphic is set to sprite out of range.
 - Fixed animated cursor's normal graphic reappearing in between animation frames if mouse mode is being repeatedly reassigned, for example in rep-exec script.
 - Fixed certain interactions did not work with GUI if it was made fully transparent.
 - Fixed ListBox.FillSaveGameList() search pattern, it included files which contain save filename pattern but do not exactly match; for example: "agssave.001_".
 - Fixed engine was ignoring audio files in game directory when running games which use old audio system.
 - Fixed crash in Direct3D and OpenGL renderers that occured if game uses a plugin that performs software drawing on screen, and one of the rooms is smaller than the game's resolution.
 - Fixed Direct3D was assigning wrong fullscreen refresh rate sometimes, slowing alt-tabbing.
 - Fixed "--test" mode was lost upon restoring a save.

Engine Plugin API:
 - Added IAGSEngine::GetRenderStageDesc() function which returns current render stage parameters. As of this version these parameters include 3 transformation matrixes, allowing any 3D render plugin to stay compliant to engine's scene rendering.

Compatibility:
 - Fixed engine was trying to read unnecessary data when loading pre-2.72 games.
 - Fixed "upscale" mode for old games (was broken in 3.5.0). Also engine will now try to detect if "upscale" mode wanted by reading old config options (if they are present).
 - Fixed GUI.Visible not returning expected values for GUIs with "Popup At Y" style in pre-3.5.0 games, breaking some older games logic.
 - Fixed potential buffer overflow when reading pre-3.1.0 games with old dialog script texts.
 - Fixed engine was applying player's position too early when ChangeRoom was called for 2.72 and earlier games, which could result in wrong placement in the new room if the character was walking right before the transition.

Android:
 - Corrected game scanning in AGS launcher, now it will work consistently with the desktop ports, and detect any compatible game data files named "*.ags" or "*.exe".

OSX:
 - When looking for game files engine will no longer use hardcoded filename, will search for any compatible pack file instead.

Windows:
 - Windows version of the engine now reads global configuration file. It is looked up in "USERPROFILE/Saved Games/Adventure Game Studio/acsetup.cfg"
 - Default log file location is now also in "USERPROFILE/Saved Games/Adventure Game Studio".
 - Added "--no-message-box" command line option to hide message boxes when alerts are raised. These messages will be still printed to log (if one is enabled).
 - Added "--console-attach" command line option to try attach to the parent process's console. This is useful if you run game from command line and want to see engine's log in the console.

WinSetup:
 - Fixed changing fullscreen mode from "use current desktop" to explicit resolution on save.

    </releaseNotes>
    <dependencies>
      <dependency id="chocolatey" version="0.9.8.21" />
      <dependency id="vcredist2015" version="14.0.24215.20170201"/>
      <dependency id="dotnet4.5" version="4.5.20120822"/>
    </dependencies>
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
